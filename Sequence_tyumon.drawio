@startuml
skinparam handwritten true
skinparam style "rounded"

actor 顧客
participant "購入手続き画面\n: Boundary" as Boundary_Checkout
participant "決済制御\n: Control" as Control_Payment
database "カート\n: Entity" as Entity_Cart
database "商品\n: Entity" as Entity_Product
participant "表示サービス\n: Control" as Control_Display
participant "注文完了画面\n: Boundary" as Boundary_Complete

' 1. 購入手続き画面へ
顧客 -> Boundary_Checkout : 1.注文を確定する
activate Boundary_Checkout

' 2. 決済制御の開始（図の「決済完了」）
Boundary_Checkout -> Control_Payment : 2.注文・決済処理を開始
deactivate Boundary_Checkout
activate Control_Payment

' 決済処理（外部連携は省略し、制御内で完了したと見なす）

' 3. 在庫数の更新（商品エンティティの更新）
Control_Payment -> Entity_Product : 3.注文数分、在庫を減少
activate Entity_Product
Entity_Product --> Control_Payment : 3.1.在庫更新完了
deactivate Entity_Product

' 4. カートのクリア（カートエンティティの更新）
Control_Payment -> Entity_Cart : 4.注文済み商品をクリア
activate Entity_Cart
Entity_Cart --> Control_Payment : 4.1.カートクリア完了
deactivate Entity_Cart

' 5. 注文完了のメッセージ表示（図の「表示」）
Control_Payment -> Control_Display : 5.注文完了の表示要求
deactivate Control_Payment
activate Control_Display
Control_Display -> Boundary_Complete : 5.1.注文完了画面へ遷移
activate Boundary_Complete

Control_Display --> Boundary_Complete : 5.2.表示データ提供
deactivate Control_Display

Boundary_Complete -> 顧客 : 6.注文完了メッセージを表示
deactivate Boundary_Complete
@enduml