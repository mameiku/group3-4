@startuml ShippingPreparationSequenceDiagram
!theme toy

' ====================================================================
' Participant Definitions (Using .jsp and .java notation)
' ====================================================================
actor LogisticsStaff as "物流担当者"
boundary ShippingListJSP as "ShippingList.jsp"
boundary ShippingInstructionJSP as "ShippingInstruction.jsp"
control ShippingProcessorJava as "ShippingProcessor.java"
control InventoryManagerJava as "InventoryManager.java"
database ShippingDBJava as "ShippingDB.java"
control MailServiceJava as "MailService.java"

' ====================================================================
' Basic Flow (基本フロー)
' ====================================================================

' 1. 物流担当者は、出荷管理画面から「出荷待ちリスト」へ遷移する
LogisticsStaff -> ShippingListJSP : 1. 出荷待ちリストへ遷移
activate ShippingListJSP

' 2. システムは出荷待ちの注文を選び、「出荷指示」を表示する
ShippingListJSP -> ShippingInstructionJSP : 出荷指示表示リクエスト(注文データ)
deactivate ShippingListJSP
activate ShippingInstructionJSP

ShippingInstructionJSP --> LogisticsStaff : 2. 出荷指示を表示()

' 3. システムは、注文内容に基づき出荷処理を実行し、ピッキングリストを作成する
ShippingInstructionJSP -> ShippingProcessorJava : 3. 出荷処理実行(注文データ)
activate ShippingProcessorJava

ShippingProcessorJava -> InventoryManagerJava : 3. ピッキングリスト作成要求
activate InventoryManagerJava
InventoryManagerJava --> ShippingProcessorJava : ピッキングリスト

' 4. アクターは、ピッキングリストを基に、倉庫から現物商品を集める
Note over LogisticsStaff, ShippingProcessorJava : 4. ピッキングリストを基に現物商品を集める

' 5. アクターは、商品の検品と梱包作業を行う
Note over LogisticsStaff : 5. 検品と梱包作業を行う

' 6. アクターは、配送伝票の発行と追跡番号をシステムに入力する
LogisticsStaff -> ShippingInstructionJSP : 6. 追跡番号を入力
ShippingInstructionJSP -> ShippingProcessorJava : 追跡番号登録()

' --- Alternative Flow 1: Cannot ship due to insufficient stock (代替フロー 1: 在庫不足) ---
alt [在庫不足]
    ' Basic Flow 3. システムが在庫をチェック
    ShippingProcessorJava -> InventoryManagerJava : 在庫チェック()
    InventoryManagerJava --> ShippingProcessorJava : 在庫情報(不足)
    
    ' Alt 1-1. システムは、出荷処理時に対象商品の在庫が不足していることを検知する
    ShippingProcessorJava -> ShippingInstructionJSP : 在庫不足エラー表示
    
    ' Alt 1-2. システムは、当該注文を「在庫不足」ステータスに更新
    ShippingProcessorJava -> ShippingDBJava : 注文ステータス更新("在庫不足")
    activate ShippingDBJava
    ShippingDBJava --> ShippingProcessorJava : 更新完了
    deactivate ShippingDBJava

    ' Alt 1-3. アクターに警告メッセージを表示
    ShippingInstructionJSP --> LogisticsStaff : 在庫不足警告メッセージ表示

    deactivate InventoryManagerJava
    deactivate ShippingProcessorJava
    deactivate ShippingInstructionJSP

else [在庫あり（代替フロー2へ進む）]
' --- Alternative Flow 2: Invalid format for tracking number (代替フロー 2: 配送番号不正) ---
alt [配送番号不正]
    ShippingProcessorJava -> ShippingInstructionJSP : 追跡番号検証()
    ShippingInstructionJSP -> ShippingProcessorJava : 検証結果(不正)

    ' Alt 2-1. システムは、エラーメッセージを表示する
    ShippingProcessorJava -> ShippingInstructionJSP : エラーメッセージ表示("追跡番号の形式が不正です")
    deactivate ShippingProcessorJava
    ShippingInstructionJSP --> LogisticsStaff : 追跡番号不正エラー表示
    
    Note over LogisticsStaff : 担当者は正しい追跡番号を確認・入力し、\n再度「出荷完了」をクリックする (基本フローへ戻る)
    deactivate ShippingInstructionJSP
    
else [問題なし]
    ' 7. アクターは「出荷完了」ボタンを選択する
    LogisticsStaff -> ShippingInstructionJSP : 7. 「出荷完了」を選択
    ShippingInstructionJSP -> ShippingProcessorJava : 注文確定(追跡番号)
    
    ' 8. システムは、注文のステータスを「出荷完了」に更新する
    ShippingProcessorJava -> ShippingDBJava : 8. 注文ステータス更新("出荷完了")
    activate ShippingDBJava

    ' 9. システムは、出荷された商品の在庫数を減算する
    ShippingProcessorJava -> InventoryManagerJava : 9. 在庫数減算(出荷数)
    InventoryManagerJava --> ShippingProcessorJava : 減算完了
    deactivate InventoryManagerJava

    ' 10. システムは、追跡番号を含む発送完了メールを顧客に自動送信する
    ShippingProcessorJava -> MailServiceJava : 10. 発送完了メール送信(追跡番号)
    activate MailServiceJava
    MailServiceJava --> ShippingProcessorJava : 送信完了
    deactivate MailServiceJava

    ShippingDBJava --> ShippingProcessorJava : 更新完了
    deactivate ShippingDBJava
    
    ' Post-condition: 画面表示を更新し、リストに戻る。
    deactivate ShippingProcessorJava
    ShippingInstructionJSP --> LogisticsStaff : 処理完了通知
    deactivate ShippingInstructionJSP

end ' 代替フロー 2 alt を閉じる
end ' 代替フロー 1 alt を閉じる

@enduml
