@startuml OrderSequenceDiagram
!theme toy

' ====================================================================
' Participant Definitions (Based on Use Case Description)
' ====================================================================
actor Customer
boundary ShoppingCartPage as "Shopping Cart Page"
boundary OrderForm as "Order Form"
control OrderProcessor as "Order Processor"
control PaymentSystem as "Payment System"
database Database as "Database"
boundary OrderCompletePage as "Order Complete Page"
control MailSystem as "Mail Sending System"

' ====================================================================
' Basic Flow
' ====================================================================

' 1. The customer clicks the "Proceed to Checkout" button on the shopping cart page.
Customer -> ShoppingCartPage : 1. Click "Proceed to Checkout"
activate ShoppingCartPage

ShoppingCartPage -> OrderForm : Order Form Request
deactivate ShoppingCartPage
activate OrderForm

' 2. The system displays the order form.
OrderForm --> Customer : 2. Display Form()

' 3. The customer enters information and confirms the order details (local operation).
Note over Customer, OrderForm : 3. Enter shipping, payment, and delivery method\n and confirm order details (Local Processing)

' 4. The customer clicks the "Confirm Order" button.
Customer -> OrderForm : 4. Click "Confirm Order"

' 5. The system validates the order content based on the entered information.
OrderForm -> OrderProcessor : 5. Validate Order Info()
activate OrderProcessor
OrderProcessor --> OrderForm : Validation Result()

' --- Alternate Flow 1: Insufficient Stock ---
alt [Insufficient Stock]
    OrderProcessor -> Database : Check Stock()
    Database --> OrderProcessor : Stock Info (Insufficient)
    OrderProcessor -> OrderForm : Display Error Message("Stock is insufficient")
    deactivate OrderProcessor
    
    OrderForm --> Customer : 2. Display Error, Stop Purchase Process

    Note over Customer, OrderForm : Customer reviews and potentially removes items from the cart
    ' deactivate OrderForm ' **Removed error line**

else [Stock Available]
    ' 6. The system links information to the payment system based on the selected payment method.
    OrderProcessor -> PaymentSystem : 6. Payment System Linkage()
    activate PaymentSystem

    ' 7. The system receives a payment completion notification from the payment system.
    PaymentSystem --> OrderProcessor : 7. Payment Result Notification (Success/Failure)

    ' --- Alternate Flow 2: Payment Registration Failed ---
    alt [Payment Registration Failed]
        OrderProcessor -> OrderForm : Display Payment Error Message
        deactivate PaymentSystem
        deactivate OrderProcessor
        OrderForm --> Customer : Display Error (Request for Re-entry)
        Note over Customer, OrderForm : Re-enter payment information after a while
        ' deactivate OrderForm ' **Commented out error line**

    else [Payment Successful]
        ' 8. The system finalizes the order and registers the order information in the database.
        OrderProcessor -> Database : 8. Register Order Info()
        activate Database
        Database --> OrderProcessor : Registration Complete
        deactivate Database

        ' 9. The system appends to the customer's payment history (database operation).
        OrderProcessor -> Database : 9. Append Payment History()

        ' 10. The system updates the stock count of the ordered products.
        OrderProcessor -> Database : 10. Update Stock Count()

        ' 11. The system deletes the cart information for the ordered products.
        OrderProcessor -> Database : 11. Delete Cart Info()
        Database --> OrderProcessor : Deletion Complete

        ' 12. Displays the order complete screen and sends an order confirmation email.
        OrderProcessor -> OrderCompletePage : 12. Display Order Complete Page()
        activate OrderCompletePage

        OrderProcessor -> MailSystem : 12. Send Order Confirmation Email()
        activate MailSystem
        MailSystem --> OrderProcessor : Sending Complete
        deactivate MailSystem

        deactivate OrderProcessor
        OrderCompletePage --> Customer : 12. Display Order Complete Page
        deactivate OrderCompletePage
        ' deactivate OrderForm ' **Basic Flow lifeline end**
    end ' Close Payment Result alt
end ' Close Stock Check alt

' deactivate OrderForm ' Original deleted line

@enduml